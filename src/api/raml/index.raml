#%RAML 0.8
---
title: API Resource
baseUri: https://localhost/api/
protocols: [HTTPS]
mediaType: application/json

traits:
  - auth: !include _traits/auth.raml

/issueTypes:
  description: IssueType resource.
  get: 
    description: Retrieve a list of IssueType.
    responses:
      200:
        body:
          application/json:
            example: |
              [
                {
                  "id": "54d8ae163fd30364605c81a4",
                  "shortName": "broken streetlight",
                  "description": "broken streetlight" 
                },
                ...
              ]
  post:
    description: create a new IssueType.
    is: [auth: { roles: 'staff' }]
    body:
      application/json:
        example: |
          {
            "shortName": "broken streetlight",
            "description": "broken streetlight" 
          }
    responses:
      201:
        body:
          application/json:
            example: |
              {
                "id": "54d8ae163fd30364605c81a4",
                "shortName": "broken streetlight",
                "description": "broken streetlight"
              }
  /{id}:
    get:
      description: retrieve an issueType by its id
      responses:
      200:
        body:
          application/json:
            example: |
              [
                {
                  "id": "54d8ae163fd30364605c81a4",
                  "shortName": "broken streetlight",
                  "description": "broken streetlight" 
                }
              ]
    put: 
      description: update an issueType specified by its id
      is: [auth: { roles: 'staff' }]
      body:
        application/json:
          example: |
            {
              "shortName": "broken streetlight",
              "description": "broken streetlight" 
            }
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": "54d8ae163fd30364605c81a4",
                  "shortName": "broken streetlight",
                  "description": "broken streetlight" 
                }
    delete:
      description: delete an issueType specified by its id
      is: [auth: { roles: 'staff' }]
      responses:
        204:
          body:

/issues:
  description: Issue resource.
  get:
    description: Retrieve a list of issue.
  post:
    description: create a new issue.
    is: [auth: { roles: 'citizen' }]
    body:
      application/json:
        example: |
          {
            "author": "Romain",
            "type": "broken streelight",
            "description": "+6624582",
            "coords": [
              "45.6", "34.6"
            ]
          }
    responses:
      201:
        body:
          application/json:
            example: |
              {
                "id": "54d8ae163fd30364605c81a4",
                "author": "Romain",
                "type": "broken streelight",
                "description": "+6624582",
                "coords": [
                  "45.6", "34.6"
                ]
              }

  /{id}:
    get: 
      description: retrieve an issue by its id
      responses:
      200:
        body:
          application/json:
            example: |
              [
                {
                  "id": "54d8ae163fd30364605c81a4",
                  "author": "Romain",
                  "type": "broken streelight",
                  "description": "+6624582",
                  "coords": [
                    "45.6", "34.6"
                }
              ]
    put:
      description: update an issue by its id
      body:
        application/json:
          example: |
            {
                "author": "Romain",
                "type": "broken streelight",
                "description": "+6624582",
                "coords": [
                    "45.6", "34.6"
            }
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": "54d8ae163fd30364605c81a4",
                  "author": "Romain",
                  "type": "broken streelight",
                  "description": "+6624582",
                  "coords": [
                    "45.6", "34.6"
                }
    delete:
      description: delete an issue by its id
      responses:
        204:
          body:

/actions:
  get:
    is: [auth: { roles: 'staff' }]
    description: Retrieve a list of actions.
  post:
    is: [auth: { roles: 'staff' }]
    description: create a new action.
  /{id}:
    get: 
      is: [auth: { roles: 'staff' }]
      description: retrieve an action by its id

/users:
  description: User resource.
  get:
    is: [auth: { roles: 'staff' }]
    description: Retrieve the list of the users.
    responses:
      200:
        body:
          application/json:
            example: |
              [
                {
                  "id": "54d8ae163fd30364605c81a4",
                  "firstname": "Romain",
                  "lastname": "Terieur",
                  "phone": "+6624582",
                  "roles": [
                    "citizen"
                  ]
                },
                {
                  "id": "54d8ae163fd30364605c81a9",
                  "firstname": "Romain",
                  "lastname": "Terieur",
                  "phone": "+8211332",
                  "roles": [
                    "citizen",
                    "staff"
                  ]
                },
                ...
              ]
  post:
    description: Create a new user.
    body:
      application/json:
        example: |
          {
            "firstname": "Romain",
            "lastname": "Terieur",
            "phone": "+6624582",
            "roles": [
              "citizen"
            ]
          }
    responses:
      201:
        body:
          application/json:
            example: |
              {
                "id": "54d8ae163fd30364605c81a4",
                "firstname": "Romain",
                "lastname": "Terieur",
                "phone": "+6624582",
                "roles": [
                  "citizen"
                ]
              }

  /{id}:
    get:
      is: [auth: {roles: 'any'} ]
      description: Retrieve the details of a specific user.
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": "54d8ae163fd30364605c81a4",
                  "firstname": "Romain",
                  "lastname": "Terieur",
                  "phone": "+6624582",
                  "roles": [
                    "citizen"
                  ]
                }
    put:
      is: [auth: {roles: 'staff'} ]
      description: Update the details of a specific user.
      body:
        application/json:
          example: |
            {
              "firstname": "Romain",
              "lastname": "Terieur",
              "phone": "+6624582",
              "roles": [
                "citizen"
              ]
            }
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": "54d8ae163fd30364605c81a4",
                  "firstname": "Romain",
                  "lastname": "Terieur",
                  "phone": "+6624582",
                  "roles": [
                    "citizen"
                  ]
                }
    delete:
      is: [auth: {roles: 'staff'} ]
      description: Delete a specific user.
      responses:
        204:
          body:

/data:
  description: Data resource.
  /populate:
    post:
      description: Allow to populate random data to have a starting situation.
      responses:
        200:
          body: